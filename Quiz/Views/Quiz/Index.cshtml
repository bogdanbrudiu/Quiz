@model PagedList.IPagedList<QuizWeb.Models.Quiz>

@{
    ViewBag.Title = Resource.Quizzes;
}

<h2>@Resource.Quizzes</h2>

<p>
    @Html.ActionLink(Resource.CreateNew, "Create")
</p>
@using (Html.BeginForm())
{
    <p>
        @Resource.SearchByName: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp;
        <input type="submit" value="@Resource.Search" /></p>
}

<table>
<tr>
    <th></th>
       <th>
        @Resource.QuizName
    </th>
       <th>
        @Resource.QuizCode
    </th>
       <th>
        @Resource.AlwaysGenerate
    </th>
       <th>
        @Resource.RandomiseQuestionsOrder
    </th>
       <th>
        @Resource.RandomiseAnswersOrder
    </th>
      <th>
        @Resource.AllowNavigate
    </th> 
     <th>
        @Resource.QuestionsPerPage
    </th>
</tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.ActionLink(Resource.Edit, "Edit", new { id = item.ID, currentFilter = ViewBag.CurrentFilter, sortOrder = ViewBag.CurrentSort, page = Model.PageNumber }, new { @class = "buton-editeaza", @title = @Resource.Edit }) 
            @Html.ActionLink(Resource.Delete, "Delete", new { id = item.ID, currentFilter = ViewBag.CurrentFilter, sortOrder = ViewBag.CurrentSort, page = Model.PageNumber }, new { @class = "buton-sterge", @title = @Resource.Delete }) 
            @Html.ActionLink(Resource.Details, "Details", new { id = item.ID, currentFilter = ViewBag.CurrentFilter, sortOrder = ViewBag.CurrentSort, page = Model.PageNumber }, new { @class = "buton-detalii", @title = @Resource.Details }) 

        </td>
         <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
         <td>
            @Html.DisplayFor(modelItem => item.Code)
        </td>
         <td>
            @Html.DisplayFor(modelItem => item.AlwaysGenerate)
        </td>
          <td>
            @Html.DisplayFor(modelItem => item.RandomiseQuestionsOrder)
        </td>
          <td>
            @Html.DisplayFor(modelItem => item.RandomiseAnswersOrder)
        </td>
            <td>
            @Html.DisplayFor(modelItem => item.AllowNavigate)
        </td>
            <td>
            @Html.DisplayFor(modelItem => item.QuestionsPerPage)
        </td>
      
       
    </tr>
}

</table>

<div class="navi-bar">
    @Resource.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    @Resource.of @Model.PageCount
    &nbsp;
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink(Resource.FirstPage, "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw("&nbsp;");
        @Html.ActionLink(Resource.Prev, "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @Resource.FirstPage
        @Html.Raw("&nbsp;");
        @Resource.Prev
    }
    &nbsp;
    @if (Model.HasNextPage)
    {
        @Html.ActionLink(Resource.Next, "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw("&nbsp;");
        @Html.ActionLink(Resource.LastPage, "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @Resource.Next
        @Html.Raw("&nbsp;")
        @Resource.LastPage
    }
</div>